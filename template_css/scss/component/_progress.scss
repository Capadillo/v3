@use '../base/colors' as clr;

.progress {
    --progress: 0%;
    --progress-gap: 1px;

    background-color: rgba(0, 0, 0, 0.75);
    border: 3px solid black;
    box-sizing: border-box;
    display: block;
    font-size: 0.825rem;
    font-weight: 500;
    height: auto;
    min-height: 2rem;
    position: relative;
    text-shadow: 1px 1.25px 1px rgba(0, 0, 0, 0.8);
    width: 100%;
    z-index: 1;

    &::before {
        background-color: red;
        content: "";
        inset: var(--progress-gap, 1px);
        max-width: calc(100% - (var(--progress-gap, 1px) * 2));
        position: absolute;
        width: var(--progress, 0%);
        z-index: 2;
    }

    label {
        align-items: center;
        display: flex;
        justify-content: space-between;
        position: relative;
        z-index: 3;

        & > span {
            display: block;
            padding: 0.825rem;
        }
    }
}

// =~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~
// Extensions of Progress
// =~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~

.progress.health {
    --color-failure: rgb(200, 90, 90);
    --color-success: var(--clr-constitution-400);
    --color-success-shield: var(--clr-charisma-250);

    border-color: color-mix(in srgb, black 60%, var(--color-success));
    
    &::before {
        background-color: var(--color-success);
        background-image:
            linear-gradient(
                to bottom,
                color-mix(in srgb, black, var(--color-success)),
                var(--color-success));
    }

    i{
        font-style: unset;
        position: relative;
        z-index: 1;

        &::before {
            content: "";
            display: inline-block;
            height: 2.8em;
            width: 2.8em;
            background-image: url('../img/shield.svg');
            background-position: center;
            background-size: contain;
            background-repeat: no-repeat;
            position: absolute;
            left: 50%;
            top: 50%;
            transform: translate(-50%, -50%);
            z-index: 0;
        }

        span {
            font-size: 0.75em;
            position: relative;
            top: -0.0625rem;
            z-index: 1;
        }
    }

    &.shield {
        border-color: color-mix(in srgb, black 60%, var(--color-success-shield));

        &::before {
            background-color: var(--color-success-shield);
            background-image:
                linear-gradient(
                    to bottom,
                    color-mix(in srgb, black, var(--color-success-shield)),
                    var(--color-success-shield));
        }
    }

    .saves {
        visibility: hidden;
    }

    &.dying {
        &::before,
        label {
            visibility: hidden;
        }

        .saves {
            display: flex;
            gap: var(--progress-gap, 1px);
            inset: var(--progress-gap, 1px);
            position: absolute;
            visibility: visible;

            span {
                border: 0.0625rem solid transparent;
                flex-grow: 1;

                &.checked {
                    &:nth-child(1),
                    &:nth-child(2),
                    &:nth-child(3) {
                        background-color: var(--color-failure);
                        background-image:
                            linear-gradient(
                                to bottom,
                                color-mix(in srgb, black, var(--color-failure)),
                                var(--color-failure));
                        border-color: color-mix(in srgb, black 40%, var(--color-failure));
                    }

                    &:nth-child(4),
                    &:nth-child(5),
                    &:nth-child(6) {
                        background-color: var(--color-success);
                        background-image:
                            linear-gradient(
                                to bottom,
                                color-mix(in srgb, black, var(--color-success)),
                                var(--color-success));
                        border-color: color-mix(in srgb, black 40%, var(--color-success))
                    }

                    &:first-of-type {
                        background:
                            center / auto 80% no-repeat url("../img/skull-full.svg"),
                            linear-gradient(
                                to bottom,
                                color-mix(in srgb, black, var(--color-failure)),
                                var(--color-failure));
                    }

                    &:last-of-type {
                        background:
                            center / auto 80% no-repeat url("../img/chevron.svg"),
                            linear-gradient(
                                to bottom,
                                color-mix(in srgb, black, var(--color-success)),
                                var(--color-success));
                    }
                }
            }
        }
    }
}

@each $key, $value in clr.$colors {
    .progress.#{$key} {
        border-color: color-mix(in srgb, black 60%, var(--clr-#{$key}-100));
    
        &::before {
            background-color: var(--clr-#{$key}-300);
            background-image:
                linear-gradient(
                    to bottom,
                    color-mix(in srgb, black, var(--clr-#{$key}-300)),
                    var(--clr-#{$key}-300));
        }
    }
}